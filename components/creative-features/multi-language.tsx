"use client"

import { useState } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Badge } from "@/components/ui/badge"
import { Languages, Download } from "lucide-react"
import type { ClinicalSummary } from "@/lib/medical-kb"

interface MultiLanguageProps {
  clinicalSummary: ClinicalSummary
}

const languages = [
  { code: "en", name: "English", flag: "ЁЯЗ║ЁЯЗ╕" },
  { code: "es", name: "Spanish", flag: "ЁЯЗкЁЯЗ╕" },
  { code: "hi", name: "Hindi", flag: "ЁЯЗоЁЯЗ│" },
  { code: "ta", name: "Tamil", flag: "ЁЯЗоЁЯЗ│" },
  { code: "zh", name: "Chinese", flag: "ЁЯЗиЁЯЗ│" },
  { code: "ar", name: "Arabic", flag: "ЁЯЗ╕ЁЯЗж" },
]

const mockTranslations: Record<string, Record<string, string>> = {
  es: {
    summary:
      "Paciente de 47 a├▒os con diabetes tipo 2 durante 10 a├▒os, en tratamiento con Metformina y Ramipril, se presenta para seguimiento de diabetes. Las tendencias vitales actuales muestran deterioro de HbA1c en 0.4% y aumento de peso de 5.0kg. Los hallazgos cl├нnicos cr├нticos incluyen HbA1c 8.2% indica control deficiente de diabetes y presi├│n arterial sist├│lica 150 mmHg indica hipertensi├│n moderada. Se recomienda revisi├│n cl├нnica inmediata y optimizaci├│n de la terapia basada en los indicadores actuales.",
  },
  hi: {
    summary:
      "47 рд╡рд░реНрд╖реАрдп рдорд░реАрдЬрд╝ рдЬрд┐рд╕реЗ 10 рд╕рд╛рд▓ рд╕реЗ рдЯрд╛рдЗрдк 2 рдбрд╛рдпрдмрд┐рдЯреАрдЬрд╝ рд╣реИ, рдореЗрдЯрдлреЙрд░реНрдорд┐рди рдФрд░ рд░реИрдорд┐рдкреНрд░рд┐рд▓ рдкрд░ рд╣реИ, рдбрд╛рдпрдмрд┐рдЯреАрдЬрд╝ рдХреА рдЬрд╛рдВрдЪ рдХреЗ рд▓рд┐рдП рдЖрдпрд╛ рд╣реИред рд╡рд░реНрддрдорд╛рди рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╕рдВрдХреЗрддрдХ HbA1c рдореЗрдВ 0.4% рдХреА рдЧрд┐рд░рд╛рд╡рдЯ рдФрд░ 5.0kg рд╡рдЬрди рдмрдврд╝рдирд╛ рджрд┐рдЦрд╛рддреЗ рд╣реИрдВред рдорд╣рддреНрд╡рдкреВрд░реНрдг рдиреИрджрд╛рдирд┐рдХ рдирд┐рд╖реНрдХрд░реНрд╖реЛрдВ рдореЗрдВ HbA1c 8.2% рдЦрд░рд╛рдм рдбрд╛рдпрдмрд┐рдЯреАрдЬрд╝ рдирд┐рдпрдВрддреНрд░рдг рдФрд░ рд╕рд┐рд╕реНрдЯреЛрд▓рд┐рдХ рд░рдХреНрддрдЪрд╛рдк 150 mmHg рдордзреНрдпрдо рдЙрдЪреНрдЪ рд░рдХреНрддрдЪрд╛рдк рджрд░реНрд╢рд╛рддрд╛ рд╣реИред рд╡рд░реНрддрдорд╛рди рд╕рдВрдХреЗрддрдХреЛрдВ рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рддрддреНрдХрд╛рд▓ рдиреИрджрд╛рдирд┐рдХ рд╕рдореАрдХреНрд╖рд╛ рдФрд░ рдЪрд┐рдХрд┐рддреНрд╕рд╛ рдЕрдиреБрдХреВрд▓рди рдХреА рд╕рд┐рдлрд╛рд░рд┐рд╢ рдХреА рдЬрд╛рддреА рд╣реИред",
  },
  ta: {
    summary:
      "47 ро╡ропродрпБ роирпЛропро╛ро│ро┐, 10 ро╡ро░рпБроЯроЩрпНроХро│ро╛роХ ро╡роХрпИ 2 роирпАро░ро┐ро┤ро┐ро╡рпБ роирпЛропрпН, роорпЖроЯрпНроГрокро╛ро░рпНрооро┐ройрпН рооро▒рпНро▒рпБроорпН ро░ро╛роорпНрокрпНро░ро┐ро▓рпН рооро░рпБроирпНродрпБроХро│рпН роОроЯрпБродрпНродрпБроХрпНроХрпКрогрпНроЯрпБ, роирпАро░ро┐ро┤ро┐ро╡рпБ рокро┐ройрпНродрпКроЯро░рпНродро▓рпБроХрпНроХро╛роХ ро╡роирпНродрпБро│рпНро│ро╛ро░рпН. родро▒рпНрокрпЛродрпИроп роорпБроХрпНроХро┐роп роЕро▒ро┐роХрпБро▒ро┐роХро│рпН HbA1c 0.4% роорпЛроЪроороЯрпИродро▓рпН рооро▒рпНро▒рпБроорпН 5.0kg роОроЯрпИ роЕродро┐роХро░ро┐рокрпНрокрпБ роХро╛роЯрпНроЯрпБроХро┐ройрпНро▒рой. роорпБроХрпНроХро┐ропрооро╛рой рооро░рпБродрпНродрпБро╡ роХрогрпНроЯрпБрокро┐роЯро┐рокрпНрокрпБроХро│ро┐ро▓рпН HbA1c 8.2% роорпЛроЪрооро╛рой роирпАро░ро┐ро┤ро┐ро╡рпБ роХроЯрпНроЯрпБрокрпНрокро╛роЯрпБ рооро▒рпНро▒рпБроорпН роЪро┐ро╕рпНроЯро╛ро▓ро┐роХрпН роЗро░родрпНрод роЕро┤рпБродрпНродроорпН 150 mmHg рооро┐родрооро╛рой роЙропро░рпН роЗро░родрпНрод роЕро┤рпБродрпНродроорпН роХрпБро▒ро┐роХрпНроХро┐ро▒родрпБред родро▒рпНрокрпЛродрпИроп роХрпБро▒ро┐роХро╛роЯрпНроЯро┐роХро│ро┐ройрпН роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓рпН роЙроЯройроЯро┐ рооро░рпБродрпНродрпБро╡ рооро▒рпБроЖропрпНро╡рпБ рооро▒рпНро▒рпБроорпН роЪро┐роХро┐роЪрпНроЪрпИ роорпЗроорпНрокро╛роЯрпБ рокро░ро┐роирпНродрпБро░рпИроХрпНроХрокрпНрокроЯрпБроХро┐ро▒родрпБред",
  },
}

export function MultiLanguage({ clinicalSummary }: MultiLanguageProps) {
  const [selectedLanguage, setSelectedLanguage] = useState<string>("en")
  const [translatedSummary, setTranslatedSummary] = useState<string>("")
  const [isTranslating, setIsTranslating] = useState(false)

  const translateSummary = async () => {
    if (selectedLanguage === "en") {
      setTranslatedSummary(clinicalSummary.summary)
      return
    }

    setIsTranslating(true)

    // Simulate AI translation (in production, use Google Translate API or similar)
    setTimeout(() => {
      const translation =
        mockTranslations[selectedLanguage]?.summary || `[${selectedLanguage.toUpperCase()}] ${clinicalSummary.summary}`
      setTranslatedSummary(translation)
      setIsTranslating(false)
    }, 2000)
  }

  const downloadTranslation = () => {
    const selectedLang = languages.find((l) => l.code === selectedLanguage)
    const content = `Clinical Summary (${selectedLang?.name})\n\n${translatedSummary}\n\nGenerated by SmartEMR AI\nDate: ${new Date().toLocaleString()}`

    const blob = new Blob([content], { type: "text/plain;charset=utf-8" })
    const url = URL.createObjectURL(blob)
    const a = document.createElement("a")
    a.href = url
    a.download = `clinical_summary_${selectedLanguage}.txt`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Languages className="h-5 w-5" />
          Multi-Language Clinical Summaries
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="text-sm text-gray-600">
          Generate clinical summaries in multiple languages for better patient communication.
        </div>

        <div className="flex flex-col sm:flex-row gap-4">
          <div className="flex-1">
            <Select value={selectedLanguage} onValueChange={setSelectedLanguage}>
              <SelectTrigger>
                <SelectValue placeholder="Select language" />
              </SelectTrigger>
              <SelectContent>
                {languages.map((lang) => (
                  <SelectItem key={lang.code} value={lang.code}>
                    <span className="flex items-center gap-2">
                      <span>{lang.flag}</span>
                      <span>{lang.name}</span>
                    </span>
                  </SelectItem>
                ))}
              </SelectContent>
            </Select>
          </div>

          <Button onClick={translateSummary} disabled={isTranslating} className="gap-2">
            <Languages className="h-4 w-4" />
            {isTranslating ? "Translating..." : "Translate"}
          </Button>
        </div>

        {translatedSummary && (
          <div className="space-y-4">
            <div className="p-4 bg-gray-50 rounded-lg border">
              <div className="flex items-center gap-2 mb-2">
                <Badge variant="outline">
                  {languages.find((l) => l.code === selectedLanguage)?.flag}{" "}
                  {languages.find((l) => l.code === selectedLanguage)?.name}
                </Badge>
              </div>
              <p className="text-sm leading-relaxed">{translatedSummary}</p>
            </div>

            <Button onClick={downloadTranslation} variant="outline" className="gap-2 bg-transparent">
              <Download className="h-4 w-4" />
              Download Translation
            </Button>
          </div>
        )}

        <div className="text-xs text-gray-500">
          Translations powered by AI тАв Available in 6+ languages тАв HIPAA compliant
        </div>
      </CardContent>
    </Card>
  )
}
