"use client"

import { useState } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { QrCode, Share2 } from "lucide-react"
import type { PatientData, ClinicalSummary } from "@/lib/medical-kb"

interface QRReportProps {
  patientData: PatientData
  clinicalSummary: ClinicalSummary
}

export function QRReport({ patientData, clinicalSummary }: QRReportProps) {
  const [qrCodeURL, setQrCodeURL] = useState<string | null>(null)
  const [isGenerating, setIsGenerating] = useState(false)

  const generateQRReport = async () => {
    setIsGenerating(true)

    // Create a shareable report summary
    const reportData = {
      patient: patientData.name,
      date: new Date().toISOString().split("T")[0],
      summary: clinicalSummary.summary,
      alerts: clinicalSummary.alerts.length,
      highPriorityAlerts: clinicalSummary.alerts.filter((a) => a.level === "high").length,
    }

    // In production, this would upload to a secure server and return a URL
    const mockReportURL = `https://smartemr.ai/report/${btoa(JSON.stringify(reportData)).slice(0, 12)}`

    // Generate QR code (in production, use a QR code library)
    const qrData = `https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${encodeURIComponent(mockReportURL)}`

    setTimeout(() => {
      setQrCodeURL(qrData)
      setIsGenerating(false)
    }, 1500)
  }

  const shareReport = async () => {
    if (navigator.share) {
      try {
        await navigator.share({
          title: `Clinical Report - ${patientData.name}`,
          text: `Medical report for ${patientData.name} generated by SmartEMR AI`,
          url: `https://smartemr.ai/report/shared`,
        })
      } catch (error) {
        console.log("[v0] Share cancelled or failed:", error)
      }
    } else {
      // Fallback for browsers without Web Share API
      navigator.clipboard.writeText(`Clinical Report for ${patientData.name} - https://smartemr.ai/report/shared`)
      alert("Report link copied to clipboard!")
    }
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <QrCode className="h-5 w-5" />
          QR Code Report Sharing
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="text-sm text-gray-600">
          Generate a secure QR code that patients can scan to access their clinical summary on their mobile device.
        </div>

        <div className="flex flex-wrap gap-2">
          <Button onClick={generateQRReport} disabled={isGenerating} className="gap-2">
            <QrCode className="h-4 w-4" />
            {isGenerating ? "Generating..." : "Generate QR Report"}
          </Button>

          {qrCodeURL && (
            <Button onClick={shareReport} variant="outline" className="gap-2 bg-transparent">
              <Share2 className="h-4 w-4" />
              Share Report
            </Button>
          )}
        </div>

        {qrCodeURL && (
          <div className="space-y-4">
            <div className="flex justify-center">
              <div className="p-4 bg-white rounded-lg border">
                <img src={qrCodeURL || "/placeholder.svg"} alt="QR Code for patient report" className="w-48 h-48" />
              </div>
            </div>

            <div className="text-center space-y-2">
              <p className="text-sm font-medium">Patient can scan this QR code to view:</p>
              <div className="flex flex-wrap justify-center gap-2">
                <Badge variant="secondary">Clinical Summary</Badge>
                <Badge variant="secondary">Key Alerts</Badge>
                <Badge variant="secondary">Next Steps</Badge>
                <Badge variant="secondary">Contact Info</Badge>
              </div>
            </div>

            <div className="text-xs text-gray-500 text-center">
              QR code expires in 7 days • HIPAA compliant • Secure access
            </div>
          </div>
        )}
      </CardContent>
    </Card>
  )
}
