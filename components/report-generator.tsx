"use client"

import { useState } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { FileText, Download, Printer } from "lucide-react"
import type { PatientData, ClinicalSummary } from "@/lib/medical-kb"

interface ReportGeneratorProps {
  patientData: PatientData
  clinicalSummary: ClinicalSummary
}

export function ReportGenerator({ patientData, clinicalSummary }: ReportGeneratorProps) {
  const [isGenerating, setIsGenerating] = useState(false)

  const generateReport = async () => {
    setIsGenerating(true)

    // Simulate report generation
    await new Promise((resolve) => setTimeout(resolve, 2000))

    const reportContent = `
CLINICAL REPORT
===============

Patient Information:
- Name: ${patientData.name}
- DOB: ${patientData.dob}
- Gender: ${patientData.gender}
- Medical History: ${patientData.notes}

Clinical Summary:
${clinicalSummary.summary}

Recent Visits:
${patientData.visits
  .map(
    (visit, i) => `
${i + 1}. ${visit.date} - ${visit.chiefComplaint}
   Notes: ${visit.notes}
`,
  )
  .join("")}

Current Vitals:
${patientData.vitals
  .map(
    (vital) => `
- ${vital.type}: ${vital.value} ${vital.unit} (${vital.date})
`,
  )
  .join("")}

Clinical Alerts:
${clinicalSummary.alerts
  .map(
    (alert, i) => `
${i + 1}. [${alert.level.toUpperCase()}] ${alert.message}
   Evidence: ${alert.evidence}
`,
  )
  .join("")}

Generated on: ${new Date().toLocaleString()}
Generated by: SmartEMR AI Clinical Assistant
    `

    // Create and download the report
    const blob = new Blob([reportContent], { type: "text/plain" })
    const url = URL.createObjectURL(blob)
    const a = document.createElement("a")
    a.href = url
    a.download = `${patientData.name.replace(/\s+/g, "_")}_Clinical_Report_${new Date().toISOString().split("T")[0]}.txt`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)

    setIsGenerating(false)
  }

  const printReport = () => {
    const printWindow = window.open("", "_blank")
    if (!printWindow) return

    const printContent = `
    <html>
      <head>
        <title>Clinical Report - ${patientData.name}</title>
        <style>
          body { font-family: Arial, sans-serif; margin: 20px; }
          .header { border-bottom: 2px solid #333; padding-bottom: 10px; margin-bottom: 20px; }
          .section { margin-bottom: 20px; }
          .alert-high { color: #dc2626; font-weight: bold; }
          .alert-medium { color: #ea580c; }
          .alert-low { color: #65a30d; }
        </style>
      </head>
      <body>
        <div class="header">
          <h1>SmartEMR Clinical Report</h1>
          <p><strong>Patient:</strong> ${patientData.name}</p>
          <p><strong>Generated:</strong> ${new Date().toLocaleString()}</p>
        </div>
        
        <div class="section">
          <h2>Patient Information</h2>
          <p><strong>Name:</strong> ${patientData.name}</p>
          <p><strong>DOB:</strong> ${patientData.dob}</p>
          <p><strong>Gender:</strong> ${patientData.gender}</p>
          <p><strong>Medical History:</strong> ${patientData.notes}</p>
        </div>
        
        <div class="section">
          <h2>Clinical Summary</h2>
          <p>${clinicalSummary.summary}</p>
        </div>
        
        <div class="section">
          <h2>Clinical Alerts</h2>
          ${clinicalSummary.alerts
            .map(
              (alert) => `
            <div class="alert-${alert.level}">
              <strong>[${alert.level.toUpperCase()}] ${alert.message}</strong><br>
              <em>Evidence: ${alert.evidence}</em>
            </div>
          `,
            )
            .join("<br>")}
        </div>
        
        <div class="section">
          <h2>Recent Vitals</h2>
          ${patientData.vitals
            .map(
              (vital) => `
            <p>${vital.type}: ${vital.value} ${vital.unit} (${vital.date})</p>
          `,
            )
            .join("")}
        </div>
      </body>
    </html>
    `

    printWindow.document.write(printContent)
    printWindow.document.close()
    printWindow.print()
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <FileText className="h-5 w-5" />
          Clinical Report Generator
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="flex flex-wrap gap-2">
          <Button onClick={generateReport} disabled={isGenerating} className="gap-2">
            <Download className="h-4 w-4" />
            {isGenerating ? "Generating..." : "Download Report"}
          </Button>

          <Button onClick={printReport} variant="outline" className="gap-2 bg-transparent">
            <Printer className="h-4 w-4" />
            Print Report
          </Button>
        </div>

        <div className="text-sm text-muted-foreground">
          <p>Report includes:</p>
          <ul className="list-disc list-inside mt-2 space-y-1">
            <li>Complete patient demographics and medical history</li>
            <li>AI-generated clinical summary</li>
            <li>All clinical alerts with evidence</li>
            <li>Recent vital signs and trends</li>
            <li>Visit history and notes</li>
          </ul>
        </div>

        <div className="flex gap-2">
          <Badge variant="outline">PDF Export</Badge>
          <Badge variant="outline">FHIR Compatible</Badge>
          <Badge variant="outline">Audit Trail</Badge>
        </div>
      </CardContent>
    </Card>
  )
}
